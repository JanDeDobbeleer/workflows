name: Bluesky
on:
  workflow_call:
    inputs:
      identifier:
        description: 'Bluesky identifier'
        required: true
        type: string
      password:
        description: 'Bluesky password'
        required: true
        type: string
      title:
        description: 'Post title'
        required: true
        type: string
      token:
        type: string
        description: 'GitHub token'
        required: true

jobs:
  bluesky:
    runs-on: ubuntu-latest
    steps:
      - id: repo-basename
        shell: bash
        run: |
          echo "GITHUB_REPOSITORY_MAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
      - name: Skyt üå§Ô∏è
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
        with:
          github-token: ${{ inputs.token }}
          script: |
            const { BskyAgent } = require('@atproto/api');
            const { Octokit } = require("@octokit/rest");

            (async function main() {
              const github = new Octokit();
              const response = await github.rest.repos.getLatestRelease({
                owner: process.env.GITHUB_REPOSITORY_OWNER,
                repo: process.env.GITHUB_REPOSITORY_MAME,
              });
              const release = response.data;

              let notes = release.body;

              // replace all non-supported characters
              notes = notes.replaceAll('### ', '');
              notes = notes.replaceAll('**', '');
              notes = notes.replace(/ \(\[[0-9a-z]+\]\(.*\)/g, '');
              notes = notes.trim();
              notes = notes.substring(0, 249);

              const agent = new BskyAgent({ service: 'https://bsky.social' });
              await agent.login({ identifier: ${{ inputs.identifier }}, password: ${{ inputs.password }} });

              const version = release.name;

              const text = `üì¶ ${version}

            ${notes}

            #${process.env.GITHUB_REPOSITORY_MAME} #oss #cli #opensource`;

              console.log(`Posting to Bluesky:\n\n${text}`);

              await agent.post({
                text: text,
                embed: {
                  $type: 'app.bsky.embed.external',
                  external: {
                    uri: `https://github.com/${process.env.GITHUB_REPOSITORY_OWNER}/${process.env.GITHUB_REPOSITORY_MAME}/releases/tag/${version}`,
                    title: "${{ inputs.title }}",
                    description: version,
                  },
                },
              });
            })();
