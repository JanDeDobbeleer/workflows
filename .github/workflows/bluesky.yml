name: Bluesky
on:
  workflow_call:
    secrets:
      identifier:
        description: 'Bluesky identifier'
        required: true
      password:
        description: 'Bluesky password'
        required: true
      token:
        description: 'GitHub token'
        required: true
    inputs:
      title:
        description: 'Post title'
        required: true
        type: string

jobs:
  bluesky:
    runs-on: ubuntu-latest
    steps:
      - id: repo-basename
        shell: bash
        run: |
          echo "GITHUB_REPOSITORY_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
      - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d
        with:
          node-version: 18
      - id: install-dependencies
        run: npm install @atproto/api
      - name: Skyt üå§Ô∏è
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
        with:
          github-token: ${{ secrets.token }}
          script: |
            const { BskyAgent } = require('@atproto/api');

            (async function main() {
              const response = await github.rest.repos.getLatestRelease({
                owner: process.env.GITHUB_REPOSITORY_OWNER,
                repo: process.env.GITHUB_REPOSITORY_NAME,
              });
              const release = response.data;

              let notes = release.body;

              // replace all non-supported characters
              notes = notes.replaceAll('### ', '');
              notes = notes.replaceAll('**', '');
              notes = notes.replace(/ \(\[[0-9a-z]+\]\(.*\)/g, '');
              notes = notes.trim();
              notes = notes.substring(0, 249);

              const agent = new BskyAgent({ service: 'https://bsky.social' });
              await agent.login({ identifier: "${{ secrets.identifier }}", password: "${{ secrets.password }}" });

              const version = release.name;

              const text = `üì¶ ${version}

            ${notes}

            #${process.env.GITHUB_REPOSITORY_NAME} #oss #cli #opensource`;

              console.log(`Posting to Bluesky:\n\n${text}`);

              await agent.post({
                text: text,
                embed: {
                  $type: 'app.bsky.embed.external',
                  external: {
                    uri: `https://github.com/${process.env.GITHUB_REPOSITORY_OWNER}/${process.env.GITHUB_REPOSITORY_NAME}/releases/tag/${version}`,
                    title: "${{ inputs.title }}",
                    description: version,
                  },
                },
              });
            })();
